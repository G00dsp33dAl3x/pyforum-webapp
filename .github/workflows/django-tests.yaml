name: Django Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.12

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config virtualenvs.create false

      - name: Clear Poetry Cache
        run: poetry cache clear --all pypi

      - name: Install dependencies
        run: |
          poetry install --no-root
          pip list

      - name: Create necessary directories
        run: |
          mkdir -p logs/logs

      - name: Create .env file for tests
        run: |
          echo "SECRET_KEY=django-insecure-test-key-for-ci" > .env
          echo "PG_DB=testdb" >> .env
          echo "PG_USER=testuser" >> .env
          echo "PG_PASSWORD=testpassword" >> .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_PORT=5432" >> .env
          echo "EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend" >> .env
          echo "EMAIL_HOST=localhost" >> .env
          echo "EMAIL_PORT=25" >> .env
          echo "EMAIL_USE_TLS=False" >> .env
          echo "EMAIL_HOST_USER=test@example.com" >> .env
          echo "EMAIL_HOST_PASSWORD=testpassword" >> .env
          echo "CORS_ORIGIN_WHITELIST=http://localhost:3000" >> .env

      - name: Drop and Create Database
        env:
          PGUSER: testuser
          PGPASSWORD: testpassword
          PGHOST: localhost
        run: |
          dropdb -U testuser -h localhost testdb || true
          createdb -U testuser -h localhost testdb

      - name: Run Migrations
        env:
          DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/testdb
          DJANGO_SETTINGS_MODULE: forum_sandbox.settings
        run: |
          python manage.py migrate

      - name: Run Tests
        env:
          DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/testdb
          DJANGO_SETTINGS_MODULE: forum_sandbox.settings
        run: |
          python manage.py test